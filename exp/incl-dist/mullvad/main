#!/bin/bash

#
# Usage: ./main 2>&1 | tee main.log
#

function main() {
	log_info "press ctrl+c to quit"
	while :; do
		job && log_info "waiting: 900" && sleep 900
	done
}

function job() {
	dir=data/$(date +"%Y%m%d_%H%M%S")
	mkdir -p $dir
	log_info "created output directory: $dir"

	normal_ip=$(timeout 10 curl ifconfig.me 2>/dev/null)
	if [[ -z $normal_ip ]]; then
		log_error "no connectivity"
		return 1
	fi

	make_config .tmp.mullvad.config
	log_info "created relay configs: $(cat .tmp.mullvad.config | wc -l)"

	log_info "experiment started: $(date)"
	while read config; do
		mullvad relay set location $config
		mullvad connect
		sleep 5 # ensure that mullvad got some time to start

		vpn_ip=$(timeout 10 curl ifconfig.me 2>/dev/null)
		if [[ -z $vpn_ip ]]; then
			log_error "no connectivity for config: $config"
			continue
		fi

		if [[ $normal_ip == $vpn_ip ]]; then
			log_error "expected vpn to be used for config: $config"
			continue
		fi

		log_info "using config: $config ($vpn_ip)"
		python3 rttct.py -i scthash.json -o "$dir/$config.json" -t 10
		mullvad disconnect
	done < .tmp.mullvad.config
	rm -f .tmp.mullvad.config
	log_info "experiment ended: $(date)"
}

function make_config() {
	config_path=$1
	new_country="yes"
	mullvad relay list > .tmp.mullvad.relay.list
	while read line; do
		if [[ $new_country == "yes" ]]; then
			country_code=$(echo $line | sed 's/^.*(//g' | sed 's/).*$//g')
			new_country="no"
			continue
		fi

		if [[ -z $line ]]; then
			new_country="yes"
			continue
		fi

		if [[ -z $(echo $line | grep "@") ]]; then
			continue # find more relays
		fi

		relay_code=$(echo $line | sed 's/^.*(//g' | sed 's/).*$//g')
		echo "$country_code $relay_code" >> $config_path
	done < .tmp.mullvad.relay.list
	rm -f .tmp.mullvad.relay.list
}

function log_info() {
	echo "[Info] $@" >&2
}

function log_error() {
	echo "[Error] $@" >&2
}

main
